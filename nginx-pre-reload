#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

source "$PLUGIN_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/certs/functions"
source "$PLUGIN_AVAILABLE_PATH/config/functions"
source "$PLUGIN_AVAILABLE_PATH/proxy/functions"
source "$PLUGIN_AVAILABLE_PATH/nginx-vhosts/functions"

redirect_nginx_pre_load_trigger() {
  # shellcheck disable=SC2034
  declare desc="add nginx redirect servers"
  # shellcheck disable=SC2034
  local trigger="redirect_nginx_pre_load_trigger"

  local APP="$1"
  local APP_ROOT="$DOKKU_ROOT/$APP"
  local REDIRECT_FILE="$APP_ROOT/REDIRECTS"
  [[ ! -s $REDIRECT_FILE ]] && exit 0

  [[ "$(get_app_proxy_type "$APP")" == "nginx" ]] || exit 0

  local NGINX_CONF="$APP_ROOT/nginx.conf"
  local NGINX_TEMPLATE="$(dirname "$0")/templates/nginx.conf.sigil"
  local PROXY_PORT_MAP=$(config_get "$APP" DOKKU_PROXY_PORT_MAP || true)
  local NGINX_VERSION="$(nginx -v 2>&1 | cut -d'/' -f 2)"
  local SPDY_SUPPORTED="$(is_spdy_enabled "$NGINX_VERSION")"
  if is_ssl_enabled "$APP"; then
    local APP_SSL_PATH="$DOKKU_ROOT/$APP/tls"
  fi

  while read line; do
    [[ -z "$line" ]] && continue
    local DOMAIN=$(echo "$line" | cut -d: -f1)
    local DEST_DOMAIN=${line//[^:]*:/}
    dokku_log_info1 "Configuring redirect for $DOMAIN to $DEST..."
    local SIGIL_PARAMS=(-f $NGINX_TEMPLATE APP="$APP" DOKKU_ROOT="$DOKKU_ROOT"
          SPDY_SUPPORTED="$SPDY_SUPPORTED"
          APP_SSL_PATH="$APP_SSL_PATH"
          DOMAIN="$DOMAIN" DEST_DOMAIN="$DEST_DOMAIN"
          PROXY_PORT_MAP="$PROXY_PORT_MAP")
    sigil "${SIGIL_PARAMS[@]}" | cat -s >> "$NGINX_CONF"
  done <<< "$(< "$REDIRECT_FILE")"
}

redirect_nginx_pre_load_trigger "$@"
